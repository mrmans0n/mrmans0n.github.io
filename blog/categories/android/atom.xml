<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | Nacho Lopez]]></title>
  <link href="http://mrmans0n.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://mrmans0n.github.io/"/>
  <updated>2013-11-29T18:15:45+01:00</updated>
  <id>http://mrmans0n.github.io/</id>
  <author>
    <name><![CDATA[Nacho Lopez]]></name>
    <email><![CDATA[nacho@nlopez.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Open Sourcing stuff]]></title>
    <link href="http://mrmans0n.github.io/blog/2013/11/21/open-sourcing-stuff/"/>
    <updated>2013-11-21T20:57:00+01:00</updated>
    <id>http://mrmans0n.github.io/blog/2013/11/21/open-sourcing-stuff</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve submitted some new versions of <a href="https://github.com/mrmans0n/localio">Localio</a> addressing bugs and adding some features (like <strong>XLSX support</strong>), but that&rsquo;s all in the ruby side.</p>

<p>But being true to my roots, I&rsquo;ve been working on some libraries lately, all of them for <strong>Android</strong>. You might want to check them out&hellip;</p>

<ul>
<li><p><a href="https://github.com/mobivery/smart-location-lib">SmartLocation</a>: A library for making easier the integration with the new <strong>Location</strong> powered by <em>Google Play Services</em>, with a twist &ndash; adding the current activity performed by the user (on foot, on vehicle, standing still, etc) to the mix, so we can tweak the detection precision depending on that.</p></li>
<li><p><a href="https://github.com/mrmans0n/clusterer">Clusterer</a>: A library version of some classes I have already open sourced, that perform <strong>clustering</strong> on Maps v2 for Android. I&rsquo;m working on an update in a branch that switches from a linear clustering algorithm to another version using quad trees, that is being developed right now, as Thoughtbot guys showed in their iOS example.</p></li>
</ul>


<p>Anyway I&rsquo;ll keep on working on these, as it helps me with dealing with <a href="http://nlopez.io/blog/2013/09/01/things-i-dont-like-about-working-for-clients/">the ordeal that is working for clients</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is fragmentation really that much of a problem in Android?]]></title>
    <link href="http://mrmans0n.github.io/blog/2013/08/17/is-fragmentation-really-that-much-of-a-problem-in-android/"/>
    <updated>2013-08-17T17:38:00+02:00</updated>
    <id>http://mrmans0n.github.io/blog/2013/08/17/is-fragmentation-really-that-much-of-a-problem-in-android</id>
    <content type="html"><![CDATA[<p>I always read the same and never-ending articles / posts / tweets about Android&rsquo;s fragmentation. The same <a href="http://opensignal.com/reports/fragmentation.php">boring infographics</a>, the same Google Play pie charts with Android version penetration, and always the same argument about how the developers are crazy about it, like if it&rsquo;s impossible to code because of that reason. But hey, <strong>I&rsquo;m a developer, and I couldn&rsquo;t care less</strong>.</p>

<p>I&rsquo;m not gonna say there isn&rsquo;t any fragmentation at all, it would be a huge lie. There is, of course. But through the years <strong>Android tools and framework have improved A LOT</strong>, and they embrace fragmentation. The compatibility libraries help with the interesting framework APIs. The XML resources help with layouts for different types of screens, making us to be able to code once and display the information in many different ways, or with   graphical resources, by using XML drawables.</p>

<p>It just takes a little more to get used to, coming from iOS programming for example, where everything is thought to be <em>pixel perfect</em> (though that&rsquo;s changing too, with the AutoLayout and the rumors about new types of screens in the next iPhone iterations, but still). You can&rsquo;t use hardcoded pixels to measure. You don&rsquo;t have a pretty IDE assuring that your layout is going to look perfect everywhere. You just have to take that to heart and build your interfaces avoiding things like textures and fixed sizes, in a truly responsive way.</p>

<p>It&rsquo;s a little harder to do it when talking about SDK support, as we know iOS versions have a lot of traction very fast. But, in my case, as <a href="http://www.mobivery.com">Mobivery</a> has the policy of supporting the two latest major versions by default, I can&rsquo;t  code at work and use the latest APIs either. So it&rsquo;s pretty much the same for me, I have to wait to use NSAttributedString in a native way too. Oh, but wait, it happens the same as in Android: there is a TTTAtributedString which does pretty much the same. Just like ActionBarSherlock or NineOldAndroids or many others I use for Android development.</p>

<p>As a little exercise left to the reader, just try to develop any universal app in iOS and the same app in Android. You will see how the actual code is pretty much the same, with the same exceptions. And now <strong>try to do it with a pure HTML5 app, and then kill yourself</strong>.</p>

<p>Each platform has its perks.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to fix a broken Android Studio SDK installation]]></title>
    <link href="http://mrmans0n.github.io/blog/2013/07/10/how-to-fix-a-broken-android-studio-sdk-installation/"/>
    <updated>2013-07-10T18:58:00+02:00</updated>
    <id>http://mrmans0n.github.io/blog/2013/07/10/how-to-fix-a-broken-android-studio-sdk-installation</id>
    <content type="html"><![CDATA[<p>It just happened to me. If you are in a situation where your Android Studio installation doesn&rsquo;t recognize any Android SDK (instead of a little andy, it shows a folder with a question mark over any Android SDK configured), you just have one diagnosis: <strong>your (hidden) configuration file is corrupted</strong>.</p>

<p>The solution is pretty easy. You just have to add these two lines to your /Application/Android Studio.app/bin/idea.properties:</p>

<p><code>ini
idea.config.path=~/.AndroidStudioPreview/config
idea.system.path=~/.AndroidStudioPreview/system
</code></p>

<p>You will be asked to reconfigure, as if it were the first execution of Android Studio.</p>

<p>This saved my life. You&rsquo;re welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New BikeShare! for Android]]></title>
    <link href="http://mrmans0n.github.io/blog/2013/07/07/new-bikeshare-for-android/"/>
    <updated>2013-07-07T17:55:00+02:00</updated>
    <id>http://mrmans0n.github.io/blog/2013/07/07/new-bikeshare-for-android</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently developed a brand new (rebuilt from scratch) version of BikeShare! for Android.</p>

<p>It&rsquo;s been my first approach to tablet interfaces in my <em>off work</em> apps, and I really was thrilled to do so. The app suffered an UI overhaul, and its imagery was also redone.</p>

<p>First, <strong>the icon</strong>.</p>

<p><img src="http://mrm.perry.es/icon_app_v2.png" alt="BikeShare for Android icon" /></p>

<p>It looks gorgeous in my HTC One display. It has also a XXHDPI version, tested in a Nexus 10, and looks awesome too.</p>

<p>Then, the <strong>tablet UI</strong>.</p>

<p><img src="http://mrm.perry.es/tablet_ui.png" alt="Tablet UI on Nexus 7" /></p>

<p>All the main activities have been changed too, for both tablet and phone versions. New animations, new and better information display, and better list performance.</p>

<p>And the <strong>butter</strong> too.</p>

<p>The app internal communications until now were a bit of a mess IMHO. Now, with the usage of <a href="http://square.github.io/otto/">Otto</a> and local intents the hassle is pretty much over. I was obsessed with the wrong patterns here, and the update process felt sluggish.</p>

<p>The way the fragments were being used also required a lot of memory and made the UI felt slower than it should have been.</p>

<p>The lists were using ArrayAdapter instead of BaseAdapter, and that also changed. No listings were supposed to be updating from a non-UI thread, so it was pointless.</p>

<p>The whole reengineering purpose was for a purpose. I wanted to be able to change stuff more often, and the code should be cleaner. And now it is, finally.</p>

<p>I&rsquo;m happy with the result. I hope the minor hot-fixes streak that usually follows a major release is minimal this time…</p>

<p>You can download it from the usual place: <a href="https://play.google.com/store/apps/details?id=com.bikeshare&amp;feature=search_result">Google Play</a>.</p>

<p>As if.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New additions to the family]]></title>
    <link href="http://mrmans0n.github.io/blog/2013/06/15/new-additions-to-the-family/"/>
    <updated>2013-06-15T22:00:00+02:00</updated>
    <id>http://mrmans0n.github.io/blog/2013/06/15/new-additions-to-the-family</id>
    <content type="html"><![CDATA[<p>I will be able to test my stuff in a new Android guinea pig, and boy… what a beautiful guinea pig the
<strong>HTC One</strong>
 is.</p>

<p><img src="http://mrm.perry.es/uploads/admin/image/image/29/HTC-One-blanco-02.jpg" alt="" /></p>

<p>And, for the first time ever, Sense is not a bother. It’s just beautiful.</p>

<p>But nevertheless I’m excited about the Google Edition when it comes at the end of this month.</p>

<p>Also I’ve stumbled upon a brand new
<strong>iPhone 4S</strong>
, courtesy of
<a href="http://www.mobivery.com">Mobivery</a>, for testing purposes.</p>

<p><img src="http://mrm.perry.es/uploads/admin/image/image/30/iphone-4s.jpg" alt="" /></p>

<p>The dual core in iOS is a must since iOS 6, my old iPhone 4 couldn’t keep up at all (and when I tried iOS 7 beta 1 there, I swear I saw the iPhone phisically sweat). So pretty excited to try my stuff in there too, and see it runs smoothly.</p>

<p>Instrumentation tests, there I go!</p>
]]></content>
  </entry>
  
</feed>
